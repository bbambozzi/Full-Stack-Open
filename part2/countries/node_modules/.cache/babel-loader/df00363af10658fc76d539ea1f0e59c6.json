{"ast":null,"code":"var _jsxFileName = \"/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/components/WeatherDisplay.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WeatherDisplay = props => {\n  _s();\n\n  const [getCoordinates, setCoordinates] = useState(props.coordinates);\n  const [getWeatherData, setWeatherData] = useState(''); // OpenWeather API KEY\n  // IMPORTANT! DO NOT OVERWRITE! Set as env variable instead!\n  // In bash: REACT_APP_API_KEY=\"VALUEHERE\" && NPM START\n\n  const APIKey = process.env.REACT_APP_API_KEY;\n  console.log(`got a key with ${APIKey}`);\n  useEffect(() => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${getCoordinates[0]}&lon=${getCoordinates[0]}&appid=${APIKey}`).then(response => {\n      setWeatherData(response.data);\n    }).catch(e => {\n      console.log('api request failed');\n    });\n  }, [getCoordinates]);\n  useEffect(() => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${getCoordinates[0]}&lon=${getCoordinates[0]}&appid=${APIKey}`).then(response => {\n      setWeatherData(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    setCoordinates(props.coordinates);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"The latitude is \", getCoordinates[0], \" and the longitude is \", getCoordinates[1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current temperate is \", getWeatherData.main.temp, \" Kelvins\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n\n_s(WeatherDisplay, \"T6OMGR+TnWUUoRLOHDF/Go95DcI=\");\n\n_c = WeatherDisplay;\nexport default WeatherDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"names":["useState","useEffect","axios","WeatherDisplay","props","getCoordinates","setCoordinates","coordinates","getWeatherData","setWeatherData","APIKey","process","env","REACT_APP_API_KEY","console","log","get","then","response","data","catch","e","main","temp"],"sources":["/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/components/WeatherDisplay.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst WeatherDisplay = (props) => {\n  const [getCoordinates, setCoordinates] = useState(props.coordinates)\n  const [getWeatherData, setWeatherData] = useState('')\n\n\n  // OpenWeather API KEY\n  // IMPORTANT! DO NOT OVERWRITE! Set as env variable instead!\n  // In bash: REACT_APP_API_KEY=\"VALUEHERE\" && NPM START\n  const APIKey = process.env.REACT_APP_API_KEY\n  console.log(`got a key with ${APIKey}`)\n\n  useEffect(() => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${getCoordinates[0]}&lon=${getCoordinates[0]}&appid=${APIKey}`).then(response => {\n      setWeatherData(response.data);\n    }).catch((e) => { console.log('api request failed') }\n    )\n  }, [getCoordinates])\n\n\n  useEffect(() => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${getCoordinates[0]}&lon=${getCoordinates[0]}&appid=${APIKey}`).then((response) => {\n      setWeatherData(response.data);\n    })\n  }, [])\n\n\n\n  useEffect(() => {\n    setCoordinates(props.coordinates)\n\n  }, [props])\n\n  return (\n    <>\n      <>\n        <h4>The latitude is {getCoordinates[0]} and the longitude is {getCoordinates[1]}</h4>\n      </>\n      <>\n        <p>Current temperate is {getWeatherData.main.temp} Kelvins</p>\n      </>\n    </>\n  );\n};\n\nexport default WeatherDisplay;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;EAAA;;EAChC,MAAM,CAACC,cAAD,EAAiBC,cAAjB,IAAmCN,QAAQ,CAACI,KAAK,CAACG,WAAP,CAAjD;EACA,MAAM,CAACC,cAAD,EAAiBC,cAAjB,IAAmCT,QAAQ,CAAC,EAAD,CAAjD,CAFgC,CAKhC;EACA;EACA;;EACA,MAAMU,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA3B;EACAC,OAAO,CAACC,GAAR,CAAa,kBAAiBL,MAAO,EAArC;EAEAT,SAAS,CAAC,MAAM;IACdC,KAAK,CAACc,GAAN,CAAW,uDAAsDX,cAAc,CAAC,CAAD,CAAI,QAAOA,cAAc,CAAC,CAAD,CAAI,UAASK,MAAO,EAA5H,EAA+HO,IAA/H,CAAoIC,QAAQ,IAAI;MAC9IT,cAAc,CAACS,QAAQ,CAACC,IAAV,CAAd;IACD,CAFD,EAEGC,KAFH,CAEUC,CAAD,IAAO;MAAEP,OAAO,CAACC,GAAR,CAAY,oBAAZ;IAAmC,CAFrD;EAID,CALQ,EAKN,CAACV,cAAD,CALM,CAAT;EAQAJ,SAAS,CAAC,MAAM;IACdC,KAAK,CAACc,GAAN,CAAW,uDAAsDX,cAAc,CAAC,CAAD,CAAI,QAAOA,cAAc,CAAC,CAAD,CAAI,UAASK,MAAO,EAA5H,EAA+HO,IAA/H,CAAqIC,QAAD,IAAc;MAChJT,cAAc,CAACS,QAAQ,CAACC,IAAV,CAAd;IACD,CAFD;EAGD,CAJQ,EAIN,EAJM,CAAT;EAQAlB,SAAS,CAAC,MAAM;IACdK,cAAc,CAACF,KAAK,CAACG,WAAP,CAAd;EAED,CAHQ,EAGN,CAACH,KAAD,CAHM,CAAT;EAKA,oBACE;IAAA,wBACE;MAAA,uBACE;QAAA,+BAAqBC,cAAc,CAAC,CAAD,CAAnC,4BAA8DA,cAAc,CAAC,CAAD,CAA5E;MAAA;QAAA;QAAA;QAAA;MAAA;IADF,iBADF,eAIE;MAAA,uBACE;QAAA,oCAAyBG,cAAc,CAACc,IAAf,CAAoBC,IAA7C;MAAA;QAAA;QAAA;QAAA;MAAA;IADF,iBAJF;EAAA,gBADF;AAUD,CA1CD;;GAAMpB,c;;KAAAA,c;AA4CN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}