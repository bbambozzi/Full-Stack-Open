{"ast":null,"code":"var _jsxFileName = \"/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/components/WeatherDisplay.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WeatherDisplay = props => {\n  _s();\n\n  const [getApiKey] = useState(process.env.REACT_APP_API_KEY);\n  const getCoordinates = props.coordinates;\n  const [getWeatherData, setWeatherData] = useState(null);\n  const [getImage, setImage] = useState( /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No matching image found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 41\n  }, this));\n  const [getDescription, setDescription] = useState( /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Hmm, today is a mystery\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 53\n  }, this));\n  const [getAxiosURL, setAxiosURL] = useState(`https://api.openweathermap.org/data/2.5/weather?lat=${getCoordinates[0]}&lon=${getCoordinates[1]}&appid=${getApiKey}`); // OpenWeather API KEY\n  // IMPORTANT! DO NOT OVERWRITE! Set as env variable instead!\n  // In bash: REACT_APP_API_KEY=\"VALUEHERE\"  NPM START\n\n  useEffect(() => {\n    setWeatherData(null);\n    setAxiosURL(`https://api.openweathermap.org/data/2.5/weather?lat=${getCoordinates[0]}&lon=${getCoordinates[1]}&appid=${getApiKey}`);\n  }, [getCoordinates]);\n  useEffect(() => {\n    axios.get(getAxiosURL).then(response => {\n      setWeatherData(response.data);\n    });\n  }, [getAxiosURL]);\n  useEffect(() => {\n    if (getWeatherData) {\n      const iconURL = getWeatherData.weather[0].icon;\n      const desc = getWeatherData.weather[0].description;\n      setImage( /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://openweathermap.org/img/wn/${iconURL}@2x.png`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }, this));\n      setDescription( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Today is looking like a \", desc, \" type of day, with \", kevinToCelcius(getWeatherData.main.temp), \"\\xB0 Celcius.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 22\n      }, this));\n    } else {}\n  }, [getWeatherData]);\n\n  const kevinToCelcius = kelvins => {\n    return (kelvins - 273.5).toFixed(2);\n  };\n\n  const ShowLatitudes = () => {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Latitude is \", getCoordinates[0], \" and longitude is \", getCoordinates[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ShowLatitudes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 12\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: getImage\n      }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: getDescription\n      }, void 0, false)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(WeatherDisplay, \"prO7EncSMMdonXH3+HDdxBmh9Mw=\");\n\n_c = WeatherDisplay;\nexport default WeatherDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"names":["useState","useEffect","axios","WeatherDisplay","props","getApiKey","process","env","REACT_APP_API_KEY","getCoordinates","coordinates","getWeatherData","setWeatherData","getImage","setImage","getDescription","setDescription","getAxiosURL","setAxiosURL","get","then","response","data","iconURL","weather","icon","desc","description","kevinToCelcius","main","temp","kelvins","toFixed","ShowLatitudes"],"sources":["/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/components/WeatherDisplay.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst WeatherDisplay = (props) => {\n\n  const [getApiKey] = useState(process.env.REACT_APP_API_KEY)\n  const getCoordinates = (props.coordinates);\n  const [getWeatherData, setWeatherData] = useState(null);\n  const [getImage, setImage] = useState(<p>No matching image found</p>);\n  const [getDescription, setDescription] = useState(<p>Hmm, today is a mystery</p>)\n  const [getAxiosURL, setAxiosURL] = useState(`https://api.openweathermap.org/data/2.5/weather?lat=${getCoordinates[0]}&lon=${getCoordinates[1]}&appid=${getApiKey}`);\n\n  // OpenWeather API KEY\n  // IMPORTANT! DO NOT OVERWRITE! Set as env variable instead!\n  // In bash: REACT_APP_API_KEY=\"VALUEHERE\"  NPM START\n\n\n  useEffect(() => {\n    setWeatherData(null)\n    setAxiosURL(`https://api.openweathermap.org/data/2.5/weather?lat=${getCoordinates[0]}&lon=${getCoordinates[1]}&appid=${getApiKey}`)\n  }, [getCoordinates])\n\n  useEffect(() => {\n    axios.get(getAxiosURL).then(response => {\n      setWeatherData(response.data);\n    })\n  }, [getAxiosURL])\n\n  useEffect(() => {\n    if (getWeatherData) {\n      const iconURL = getWeatherData.weather[0].icon\n      const desc = getWeatherData.weather[0].description;\n      setImage(<img src={`https://openweathermap.org/img/wn/${iconURL}@2x.png`} />)\n      setDescription(<p>Today is looking like a {desc} type of day, with {kevinToCelcius(getWeatherData.main.temp)}Â° Celcius.</p>)\n    } else {\n    }\n  }, [getWeatherData]);\n\n  const kevinToCelcius = (kelvins) => {\n    return (kelvins - 273.5).toFixed(2);\n  }\n\n  const ShowLatitudes = () => {\n    return (\n      <h4>Latitude is {getCoordinates[0]} and longitude is {getCoordinates[1]}</h4>\n    )\n  }\n  return (\n    <>\n      <>\n        <>\n          {< ShowLatitudes />}\n        </>\n        <>\n        </>\n        <>\n          {getImage}\n        </>\n        <>\n          {getDescription}\n        </>\n      </>\n    </>\n  );\n}\nexport default WeatherDisplay;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;EAAA;;EAEhC,MAAM,CAACC,SAAD,IAAcL,QAAQ,CAACM,OAAO,CAACC,GAAR,CAAYC,iBAAb,CAA5B;EACA,MAAMC,cAAc,GAAIL,KAAK,CAACM,WAA9B;EACA,MAAM,CAACC,cAAD,EAAiBC,cAAjB,IAAmCZ,QAAQ,CAAC,IAAD,CAAjD;EACA,MAAM,CAACa,QAAD,EAAWC,QAAX,IAAuBd,QAAQ,eAAC;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAD,CAArC;EACA,MAAM,CAACe,cAAD,EAAiBC,cAAjB,IAAmChB,QAAQ,eAAC;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAD,CAAjD;EACA,MAAM,CAACiB,WAAD,EAAcC,WAAd,IAA6BlB,QAAQ,CAAE,uDAAsDS,cAAc,CAAC,CAAD,CAAI,QAAOA,cAAc,CAAC,CAAD,CAAI,UAASJ,SAAU,EAAtH,CAA3C,CAPgC,CAShC;EACA;EACA;;EAGAJ,SAAS,CAAC,MAAM;IACdW,cAAc,CAAC,IAAD,CAAd;IACAM,WAAW,CAAE,uDAAsDT,cAAc,CAAC,CAAD,CAAI,QAAOA,cAAc,CAAC,CAAD,CAAI,UAASJ,SAAU,EAAtH,CAAX;EACD,CAHQ,EAGN,CAACI,cAAD,CAHM,CAAT;EAKAR,SAAS,CAAC,MAAM;IACdC,KAAK,CAACiB,GAAN,CAAUF,WAAV,EAAuBG,IAAvB,CAA4BC,QAAQ,IAAI;MACtCT,cAAc,CAACS,QAAQ,CAACC,IAAV,CAAd;IACD,CAFD;EAGD,CAJQ,EAIN,CAACL,WAAD,CAJM,CAAT;EAMAhB,SAAS,CAAC,MAAM;IACd,IAAIU,cAAJ,EAAoB;MAClB,MAAMY,OAAO,GAAGZ,cAAc,CAACa,OAAf,CAAuB,CAAvB,EAA0BC,IAA1C;MACA,MAAMC,IAAI,GAAGf,cAAc,CAACa,OAAf,CAAuB,CAAvB,EAA0BG,WAAvC;MACAb,QAAQ,eAAC;QAAK,GAAG,EAAG,qCAAoCS,OAAQ;MAAvD;QAAA;QAAA;QAAA;MAAA,QAAD,CAAR;MACAP,cAAc,eAAC;QAAA,uCAA4BU,IAA5B,yBAAqDE,cAAc,CAACjB,cAAc,CAACkB,IAAf,CAAoBC,IAArB,CAAnE;MAAA;QAAA;QAAA;QAAA;MAAA,QAAD,CAAd;IACD,CALD,MAKO,CACN;EACF,CARQ,EAQN,CAACnB,cAAD,CARM,CAAT;;EAUA,MAAMiB,cAAc,GAAIG,OAAD,IAAa;IAClC,OAAO,CAACA,OAAO,GAAG,KAAX,EAAkBC,OAAlB,CAA0B,CAA1B,CAAP;EACD,CAFD;;EAIA,MAAMC,aAAa,GAAG,MAAM;IAC1B,oBACE;MAAA,2BAAiBxB,cAAc,CAAC,CAAD,CAA/B,wBAAsDA,cAAc,CAAC,CAAD,CAApE;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAGD,CAJD;;EAKA,oBACE;IAAA,uBACE;MAAA,wBACE;QAAA,uBACG,QAAE,aAAF;UAAA;UAAA;UAAA;QAAA;MADH,iBADF,eAIE,qCAJF,eAME;QAAA,UACGI;MADH,iBANF,eASE;QAAA,UACGE;MADH,iBATF;IAAA;EADF,iBADF;AAiBD,CA7DD;;GAAMZ,c;;KAAAA,c;AA8DN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}