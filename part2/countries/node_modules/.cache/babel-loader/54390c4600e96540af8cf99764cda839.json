{"ast":null,"code":"var _jsxFileName = \"/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/components/CountriesDisplay.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport SingleDisplay from \"./SingleDisplay.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CountriesDisplay = props => {\n  _s();\n\n  const countries = props.countries;\n  const [getAllCountries, setAllCountries] = useState('');\n  const [getSingleCountry, setSingleCountry] = useState('');\n\n  const handleOneCountryDisplay = countryObj => {\n    setSingleCountry( /*#__PURE__*/_jsxDEV(SingleDisplay, {\n      countryObject: countryObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 22\n    }, this));\n  };\n\n  useEffect(() => {\n    handleOneCountryDisplay(countries[0]);\n  }, []);\n  useEffect(() => {\n    let response = countries.map((countryObject, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [countryObject.name.common, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleOneCountryDisplay(countryObject);\n          },\n          children: \"More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 57\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 14\n      }, this);\n    });\n    setAllCountries(response);\n  }, [countries]);\n\n  if (getAllCountries.length > 10) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Too many matches, please be more specific.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (getAllCountries.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"No matches found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (getAllCountries.length === 1) {\n    return getSingleCountry;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: getAllCountries\n  }, void 0, false);\n};\n\n_s(CountriesDisplay, \"DLgkwucsn2rpQhJ+JDKnzowbr7w=\");\n\n_c = CountriesDisplay;\nexport default CountriesDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountriesDisplay\");","map":{"version":3,"names":["useState","useEffect","SingleDisplay","CountriesDisplay","props","countries","getAllCountries","setAllCountries","getSingleCountry","setSingleCountry","handleOneCountryDisplay","countryObj","response","map","countryObject","index","name","common","length"],"sources":["/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/components/CountriesDisplay.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport SingleDisplay from \"./SingleDisplay.js\";\n\n\n\nconst CountriesDisplay = (props) => {\n  const countries = props.countries;\n\n  const [getAllCountries, setAllCountries] = useState('')\n  const [getSingleCountry, setSingleCountry] = useState('')\n\n  const handleOneCountryDisplay = (countryObj) => {\n    setSingleCountry(<SingleDisplay countryObject={countryObj} />)\n  }\n  useEffect(() => {\n    handleOneCountryDisplay(countries[0]);\n  }, [])\n\n  useEffect(() => {\n    let response = countries.map((countryObject, index) => {\n      return <li key={index}>{countryObject.name.common}<button onClick={() => { handleOneCountryDisplay(countryObject) }}>More</button></li>\n    })\n    setAllCountries(response);\n  }, [countries]);\n\n\n  if (getAllCountries.length > 10) {\n    return (\n      <span>Too many matches, please be more specific.</span>\n    );\n  }\n  if (getAllCountries.length === 0) {\n    return <span>No matches found</span>\n  }\n  if (getAllCountries.length === 1) {\n    return (getSingleCountry)\n  }\n  return (\n    <>\n      {getAllCountries}\n    </>\n  )\n}\n\nexport default CountriesDisplay;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;;;AAIA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;EAAA;;EAClC,MAAMC,SAAS,GAAGD,KAAK,CAACC,SAAxB;EAEA,MAAM,CAACC,eAAD,EAAkBC,eAAlB,IAAqCP,QAAQ,CAAC,EAAD,CAAnD;EACA,MAAM,CAACQ,gBAAD,EAAmBC,gBAAnB,IAAuCT,QAAQ,CAAC,EAAD,CAArD;;EAEA,MAAMU,uBAAuB,GAAIC,UAAD,IAAgB;IAC9CF,gBAAgB,eAAC,QAAC,aAAD;MAAe,aAAa,EAAEE;IAA9B;MAAA;MAAA;MAAA;IAAA,QAAD,CAAhB;EACD,CAFD;;EAGAV,SAAS,CAAC,MAAM;IACdS,uBAAuB,CAACL,SAAS,CAAC,CAAD,CAAV,CAAvB;EACD,CAFQ,EAEN,EAFM,CAAT;EAIAJ,SAAS,CAAC,MAAM;IACd,IAAIW,QAAQ,GAAGP,SAAS,CAACQ,GAAV,CAAc,CAACC,aAAD,EAAgBC,KAAhB,KAA0B;MACrD,oBAAO;QAAA,WAAiBD,aAAa,CAACE,IAAd,CAAmBC,MAApC,eAA2C;UAAQ,OAAO,EAAE,MAAM;YAAEP,uBAAuB,CAACI,aAAD,CAAvB;UAAwC,CAAjE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA3C;MAAA,GAASC,KAAT;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFc,CAAf;IAGAR,eAAe,CAACK,QAAD,CAAf;EACD,CALQ,EAKN,CAACP,SAAD,CALM,CAAT;;EAQA,IAAIC,eAAe,CAACY,MAAhB,GAAyB,EAA7B,EAAiC;IAC/B,oBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAGD;;EACD,IAAIZ,eAAe,CAACY,MAAhB,KAA2B,CAA/B,EAAkC;IAChC,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACD,IAAIZ,eAAe,CAACY,MAAhB,KAA2B,CAA/B,EAAkC;IAChC,OAAQV,gBAAR;EACD;;EACD,oBACE;IAAA,UACGF;EADH,iBADF;AAKD,CArCD;;GAAMH,gB;;KAAAA,gB;AAuCN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}