{"ast":null,"code":"var _jsxFileName = \"/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CountriesDisplay from './components/CountriesDisplay.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [getNotes, setNotes] = useState([]);\n  const [getAllNotes, setAllNotes] = useState([]);\n  const [getFilter, setFilter] = useState('');\n  const [getCountriesDisplay, setCountriesDisplay] = useState(''); // changes filter based on input change\n\n  const handleOnInputChange = event => {\n    setFilter(event.target.value);\n  }; // Triggers a useEffect in case the filter is changed, and reformulates the output to show.\n\n\n  useEffect(() => {\n    if (getFilter === '') {\n      setNotes(getAllNotes);\n      return;\n    }\n\n    const notesToShow = getAllNotes.filter(countryObject => {\n      const compareTo = getFilter.toLowerCase();\n      return countryObject.name.common.toLowerCase().startsWith(compareTo);\n    });\n    setNotes(notesToShow);\n  }, [getFilter]); // Grabs the note data from the API at the start of the App.\n\n  useEffect(() => {\n    axios.get(`https://restcountries.com/v3.1/all`).then(response => {\n      setAllNotes(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    if (getNotes.length === 1) {\n      setCountriesDisplay( /*#__PURE__*/_jsxDEV(SingleDisplay, {\n        countryObject: getNotes[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 27\n      }, this));\n    } else {\n      setCountriesDisplay( /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(CountriesDisplay, {\n          countries: getNotes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this));\n    }\n  }, [getNotes]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Country Information App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Find your favorite country here!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleOnInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false), getCountriesDisplay]\n    }, void 0, true)]\n  }, void 0, true);\n}\n\n_s(App, \"4ynxjQE0NDpWpoYBhO85UAqos2Y=\");\n\n_c = App;\n\nconst SingleDisplay = props => {\n  const countryObject = props.countryObject;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"The current country is \", countryObject.name.common, \"!!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = SingleDisplay;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SingleDisplay\");","map":{"version":3,"names":["useState","useEffect","axios","CountriesDisplay","App","getNotes","setNotes","getAllNotes","setAllNotes","getFilter","setFilter","getCountriesDisplay","setCountriesDisplay","handleOnInputChange","event","target","value","notesToShow","filter","countryObject","compareTo","toLowerCase","name","common","startsWith","get","then","response","data","length","SingleDisplay","props"],"sources":["/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CountriesDisplay from './components/CountriesDisplay.js';\n\nfunction App() {\n\n\n  const [getNotes, setNotes] = useState([])\n  const [getAllNotes, setAllNotes] = useState([])\n  const [getFilter, setFilter] = useState('')\n  const [getCountriesDisplay, setCountriesDisplay] = useState('');\n\n\n  // changes filter based on input change\n  const handleOnInputChange = (event) => {\n    setFilter(event.target.value);\n  }\n\n\n  // Triggers a useEffect in case the filter is changed, and reformulates the output to show.\n  useEffect(() => {\n    if (getFilter === '') { setNotes(getAllNotes); return; }\n    const notesToShow = getAllNotes.filter((countryObject) => {\n      const compareTo = getFilter.toLowerCase();\n      return (countryObject.name.common.toLowerCase().startsWith(compareTo));\n    })\n    setNotes(notesToShow);\n  }, [getFilter])\n\n  // Grabs the note data from the API at the start of the App.\n  useEffect(() => {\n    axios.get(`https://restcountries.com/v3.1/all`).then(\n      (response) => {\n        setAllNotes(response.data);\n      }\n    );\n  }, []);\n\n\n  useEffect(() => {\n    if (getNotes.length === 1) {\n      setCountriesDisplay(<SingleDisplay countryObject={getNotes[0]} />)\n    }\n    else {\n      setCountriesDisplay(\n        <ul>\n          <CountriesDisplay countries={getNotes} />\n        </ul>\n      );\n    }\n  }, [getNotes])\n\n  return (\n    <>\n      <>\n        <h1>Country Information App</h1>\n      </>\n      <>\n        <h3>Find your favorite country here!</h3>\n        <>\n          <input onChange={handleOnInputChange} ></input>\n        </>\n        {getCountriesDisplay}\n      </>\n    </>\n  )\n}\n\nconst SingleDisplay = (props) => {\n  const countryObject = props.countryObject;\n  return (\n    <>\n      <h1>The current country is {countryObject.name.common}!!</h1>\n    </>\n\n  );\n}\n\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAGb,MAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBN,QAAQ,CAAC,EAAD,CAArC;EACA,MAAM,CAACO,WAAD,EAAcC,WAAd,IAA6BR,QAAQ,CAAC,EAAD,CAA3C;EACA,MAAM,CAACS,SAAD,EAAYC,SAAZ,IAAyBV,QAAQ,CAAC,EAAD,CAAvC;EACA,MAAM,CAACW,mBAAD,EAAsBC,mBAAtB,IAA6CZ,QAAQ,CAAC,EAAD,CAA3D,CANa,CASb;;EACA,MAAMa,mBAAmB,GAAIC,KAAD,IAAW;IACrCJ,SAAS,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;EACD,CAFD,CAVa,CAeb;;;EACAf,SAAS,CAAC,MAAM;IACd,IAAIQ,SAAS,KAAK,EAAlB,EAAsB;MAAEH,QAAQ,CAACC,WAAD,CAAR;MAAuB;IAAS;;IACxD,MAAMU,WAAW,GAAGV,WAAW,CAACW,MAAZ,CAAoBC,aAAD,IAAmB;MACxD,MAAMC,SAAS,GAAGX,SAAS,CAACY,WAAV,EAAlB;MACA,OAAQF,aAAa,CAACG,IAAd,CAAmBC,MAAnB,CAA0BF,WAA1B,GAAwCG,UAAxC,CAAmDJ,SAAnD,CAAR;IACD,CAHmB,CAApB;IAIAd,QAAQ,CAACW,WAAD,CAAR;EACD,CAPQ,EAON,CAACR,SAAD,CAPM,CAAT,CAhBa,CAyBb;;EACAR,SAAS,CAAC,MAAM;IACdC,KAAK,CAACuB,GAAN,CAAW,oCAAX,EAAgDC,IAAhD,CACGC,QAAD,IAAc;MACZnB,WAAW,CAACmB,QAAQ,CAACC,IAAV,CAAX;IACD,CAHH;EAKD,CANQ,EAMN,EANM,CAAT;EASA3B,SAAS,CAAC,MAAM;IACd,IAAII,QAAQ,CAACwB,MAAT,KAAoB,CAAxB,EAA2B;MACzBjB,mBAAmB,eAAC,QAAC,aAAD;QAAe,aAAa,EAAEP,QAAQ,CAAC,CAAD;MAAtC;QAAA;QAAA;QAAA;MAAA,QAAD,CAAnB;IACD,CAFD,MAGK;MACHO,mBAAmB,eACjB;QAAA,uBACE,QAAC,gBAAD;UAAkB,SAAS,EAAEP;QAA7B;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADiB,CAAnB;IAKD;EACF,CAXQ,EAWN,CAACA,QAAD,CAXM,CAAT;EAaA,oBACE;IAAA,wBACE;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF,iBADF,eAIE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,uBACE;UAAO,QAAQ,EAAEQ;QAAjB;UAAA;UAAA;UAAA;QAAA;MADF,iBAFF,EAKGF,mBALH;IAAA,gBAJF;EAAA,gBADF;AAcD;;GA9DQP,G;;KAAAA,G;;AAgET,MAAM0B,aAAa,GAAIC,KAAD,IAAW;EAC/B,MAAMZ,aAAa,GAAGY,KAAK,CAACZ,aAA5B;EACA,oBACE;IAAA,uBACE;MAAA,sCAA4BA,aAAa,CAACG,IAAd,CAAmBC,MAA/C;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAMD,CARD;;MAAMO,a;AAWN,eAAe1B,GAAf"},"metadata":{},"sourceType":"module"}