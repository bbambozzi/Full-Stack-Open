{"ast":null,"code":"var _jsxFileName = \"/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/components/WeatherDisplay.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WeatherDisplay = props => {\n  _s();\n\n  const [getApiKey] = useState(process.env.REACT_APP_API_KEY);\n  const [getCoordinates] = useState(props.coordinates);\n  const [getWeatherData, setWeatherData] = useState(null);\n  const [getImage, setImage] = useState( /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No matching image found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 41\n  }, this));\n  const [getDescription, setDescription] = useState( /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Hmm, today is a mystery\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 53\n  }, this));\n  const [getAxiosURL] = useState(`https://api.openweathermap.org/data/2.5/weather?lat=${getCoordinates[0]}&lon=${getCoordinates[1]}&appid=${getApiKey}`); // OpenWeather API KEY\n  // IMPORTANT! DO NOT OVERWRITE! Set as env variable instead!\n  // In bash: REACT_APP_API_KEY=\"VALUEHERE\"  NPM START\n\n  useEffect(() => {\n    console.log(`entering at ${getAxiosURL}`);\n    axios.get(getAxiosURL).then(response => {\n      console.log(`${response.data}`);\n      setWeatherData(response.data);\n\n      if (getWeatherData) {\n        const iconURL = getWeatherData.weather[0].icon;\n        const desc = getWeatherData.weather[0].description;\n        setImage( /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://openweathermap.org/img/wn/${iconURL}@2x.png`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 18\n        }, this));\n        setDescription( /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Today is looking like a \", desc, \" type of day, with \", kevinToCelcius(getWeatherData.main.temp), \"\\xB0 Celcius.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 24\n        }, this));\n      }\n    });\n  }, [getCoordinates]);\n  /*\n  useEffect(() => {\n    setCoordinates(props.coordinates);\n    setAxiosURL(`https://api.openweathermap.org/data/2.5/weather?lat=${getCoordinates[0]}&lon=${getCoordinates[1]}&appid=${getApiKey}`)\n    axios.get(getAxiosURL).then((response) => {\n      const getAnswer = response.data;\n      setWeatherData(getAnswer);\n      console.log(getWeatherData)\n    });\n  }, [getApiKey])\n  */\n\n  const kevinToCelcius = kelvins => {\n    return (kelvins - 273.5).toFixed(2);\n  };\n\n  const ShowLatitudes = () => {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Latitude is \", getCoordinates[0], \" and longitude is \", getCoordinates[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  };\n\n  if (getWeatherData) {\n    console.log(`jackpot!!`);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(ShowLatitudes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 14\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: getImage\n        }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: getDescription\n        }, void 0, false)]\n      }, void 0, true)\n    }, void 0, false);\n  }\n};\n\n_s(WeatherDisplay, \"TA32h5X1vmf08yxadoIQM3lB/4s=\");\n\n_c = WeatherDisplay;\nexport default WeatherDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"names":["useState","useEffect","axios","WeatherDisplay","props","getApiKey","process","env","REACT_APP_API_KEY","getCoordinates","coordinates","getWeatherData","setWeatherData","getImage","setImage","getDescription","setDescription","getAxiosURL","console","log","get","then","response","data","iconURL","weather","icon","desc","description","kevinToCelcius","main","temp","kelvins","toFixed","ShowLatitudes"],"sources":["/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/components/WeatherDisplay.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst WeatherDisplay = (props) => {\n\n  const [getApiKey] = useState(process.env.REACT_APP_API_KEY)\n  const [getCoordinates] = useState(props.coordinates);\n  const [getWeatherData, setWeatherData] = useState(null);\n  const [getImage, setImage] = useState(<p>No matching image found</p>);\n  const [getDescription, setDescription] = useState(<p>Hmm, today is a mystery</p>)\n  const [getAxiosURL] = useState(`https://api.openweathermap.org/data/2.5/weather?lat=${getCoordinates[0]}&lon=${getCoordinates[1]}&appid=${getApiKey}`);\n\n  // OpenWeather API KEY\n  // IMPORTANT! DO NOT OVERWRITE! Set as env variable instead!\n  // In bash: REACT_APP_API_KEY=\"VALUEHERE\"  NPM START\n\n\n  useEffect(() => {\n    console.log(`entering at ${getAxiosURL}`)\n    axios.get(getAxiosURL).then(response => {\n      console.log(`${response.data}`)\n      setWeatherData(response.data);\n      if (getWeatherData) {\n        const iconURL = getWeatherData.weather[0].icon\n        const desc = getWeatherData.weather[0].description;\n        setImage(<img src={`https://openweathermap.org/img/wn/${iconURL}@2x.png`} />)\n        setDescription(<p>Today is looking like a {desc} type of day, with {kevinToCelcius(getWeatherData.main.temp)}Â° Celcius.</p>)\n      }\n    })\n  }, [getCoordinates])\n\n\n  /*\n  useEffect(() => {\n    setCoordinates(props.coordinates);\n    setAxiosURL(`https://api.openweathermap.org/data/2.5/weather?lat=${getCoordinates[0]}&lon=${getCoordinates[1]}&appid=${getApiKey}`)\n    axios.get(getAxiosURL).then((response) => {\n      const getAnswer = response.data;\n      setWeatherData(getAnswer);\n      console.log(getWeatherData)\n    });\n  }, [getApiKey])\n */\n\n\n\n  const kevinToCelcius = (kelvins) => {\n    return (kelvins - 273.5).toFixed(2);\n  }\n\n  const ShowLatitudes = () => {\n    return (\n      <h4>Latitude is {getCoordinates[0]} and longitude is {getCoordinates[1]}</h4>\n    )\n  }\n  if (getWeatherData) {\n    console.log(`jackpot!!`)\n    return (\n      <>\n        <>\n          <>\n            {< ShowLatitudes />}\n          </>\n          <>\n          </>\n          <>\n            {getImage}\n          </>\n          <>\n            {getDescription}\n          </>\n        </>\n      </>\n    );\n  }\n};\nexport default WeatherDisplay;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;EAAA;;EAEhC,MAAM,CAACC,SAAD,IAAcL,QAAQ,CAACM,OAAO,CAACC,GAAR,CAAYC,iBAAb,CAA5B;EACA,MAAM,CAACC,cAAD,IAAmBT,QAAQ,CAACI,KAAK,CAACM,WAAP,CAAjC;EACA,MAAM,CAACC,cAAD,EAAiBC,cAAjB,IAAmCZ,QAAQ,CAAC,IAAD,CAAjD;EACA,MAAM,CAACa,QAAD,EAAWC,QAAX,IAAuBd,QAAQ,eAAC;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAD,CAArC;EACA,MAAM,CAACe,cAAD,EAAiBC,cAAjB,IAAmChB,QAAQ,eAAC;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAD,CAAjD;EACA,MAAM,CAACiB,WAAD,IAAgBjB,QAAQ,CAAE,uDAAsDS,cAAc,CAAC,CAAD,CAAI,QAAOA,cAAc,CAAC,CAAD,CAAI,UAASJ,SAAU,EAAtH,CAA9B,CAPgC,CAShC;EACA;EACA;;EAGAJ,SAAS,CAAC,MAAM;IACdiB,OAAO,CAACC,GAAR,CAAa,eAAcF,WAAY,EAAvC;IACAf,KAAK,CAACkB,GAAN,CAAUH,WAAV,EAAuBI,IAAvB,CAA4BC,QAAQ,IAAI;MACtCJ,OAAO,CAACC,GAAR,CAAa,GAAEG,QAAQ,CAACC,IAAK,EAA7B;MACAX,cAAc,CAACU,QAAQ,CAACC,IAAV,CAAd;;MACA,IAAIZ,cAAJ,EAAoB;QAClB,MAAMa,OAAO,GAAGb,cAAc,CAACc,OAAf,CAAuB,CAAvB,EAA0BC,IAA1C;QACA,MAAMC,IAAI,GAAGhB,cAAc,CAACc,OAAf,CAAuB,CAAvB,EAA0BG,WAAvC;QACAd,QAAQ,eAAC;UAAK,GAAG,EAAG,qCAAoCU,OAAQ;QAAvD;UAAA;UAAA;UAAA;QAAA,QAAD,CAAR;QACAR,cAAc,eAAC;UAAA,uCAA4BW,IAA5B,yBAAqDE,cAAc,CAAClB,cAAc,CAACmB,IAAf,CAAoBC,IAArB,CAAnE;QAAA;UAAA;UAAA;UAAA;QAAA,QAAD,CAAd;MACD;IACF,CATD;EAUD,CAZQ,EAYN,CAACtB,cAAD,CAZM,CAAT;EAeA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAIE,MAAMoB,cAAc,GAAIG,OAAD,IAAa;IAClC,OAAO,CAACA,OAAO,GAAG,KAAX,EAAkBC,OAAlB,CAA0B,CAA1B,CAAP;EACD,CAFD;;EAIA,MAAMC,aAAa,GAAG,MAAM;IAC1B,oBACE;MAAA,2BAAiBzB,cAAc,CAAC,CAAD,CAA/B,wBAAsDA,cAAc,CAAC,CAAD,CAApE;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAGD,CAJD;;EAKA,IAAIE,cAAJ,EAAoB;IAClBO,OAAO,CAACC,GAAR,CAAa,WAAb;IACA,oBACE;MAAA,uBACE;QAAA,wBACE;UAAA,uBACG,QAAE,aAAF;YAAA;YAAA;YAAA;UAAA;QADH,iBADF,eAIE,qCAJF,eAME;UAAA,UACGN;QADH,iBANF,eASE;UAAA,UACGE;QADH,iBATF;MAAA;IADF,iBADF;EAiBD;AACF,CAxED;;GAAMZ,c;;KAAAA,c;AAyEN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}