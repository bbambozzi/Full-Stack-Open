{"ast":null,"code":"var _jsxFileName = \"/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CountriesDisplay from './components/CountriesDisplay.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Gets all notes that currently satisfy the filter conditions.\n  const [getNotes, setNotes] = useState([]); // Gets all notes available from the API\n\n  const [getAllNotes, setAllNotes] = useState([]); // Gets and sets the filter.\n\n  const [getFilter, setFilter] = useState(''); // Decides what to desplay.\n\n  const [getCountriesDisplay, setCountriesDisplay] = useState(''); // changes filter based on input change\n\n  const handleOnInputChange = event => {\n    setFilter(event.target.value);\n  }; // Triggers a useEffect in case the filter is changed, and reformulates the output to show.\n\n\n  useEffect(() => {\n    if (getFilter === '') {\n      setNotes(getAllNotes);\n      return;\n    }\n\n    const notesToShow = getAllNotes.filter(countryObject => {\n      const compareTo = getFilter.toLowerCase();\n      return countryObject.name.common.toLowerCase().startsWith(compareTo);\n    });\n    setNotes(notesToShow);\n  }, [getFilter]); // Grabs the note data from the API at the start of the App.\n\n  useEffect(() => {\n    axios.get(`https://restcountries.com/v3.1/all`).then(response => {\n      setAllNotes(response.data);\n      setNotes(getAllNotes);\n      setFilter('');\n    });\n  }, []);\n  useEffect(() => {\n    if (getNotes.length === 1) {\n      setCountriesDisplay( /*#__PURE__*/_jsxDEV(SingleDisplay, {\n        countryObject: getNotes[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 27\n      }, this));\n    } else {\n      setCountriesDisplay( /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(CountriesDisplay, {\n          countries: getNotes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this));\n    }\n  }, [getNotes]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Country Information App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Find your favorite country here!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleOnInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false), getCountriesDisplay]\n    }, void 0, true)]\n  }, void 0, true);\n}\n\n_s(App, \"4ynxjQE0NDpWpoYBhO85UAqos2Y=\");\n\n_c = App;\n\nconst SingleDisplay = props => {\n  _s2();\n\n  const countryObject = props.countryObject;\n  const [getFlagURL] = useState(countryObject.flags.png);\n  const [getFlagDisplay, setFlagDisplay] = useState( /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"No image found!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 53\n  }, this));\n  console.log('render');\n  useEffect(() => {\n    setFlagDisplay( /*#__PURE__*/_jsxDEV(\"img\", {\n      src: getFlagURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 20\n    }, this));\n  }, [getFlagURL]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"The current country is \", countryObject.name.common.concat(' ' + countryObject.flag)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: getFlagDisplay\n      }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Additional information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"The capital of \", countryObject.name.common.concat(), \" is \", countryObject.capital[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Languages:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"chuck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false)]\n  }, void 0, true);\n};\n\n_s2(SingleDisplay, \"l+M3490BFnU4H+eSj62Lr97VF8w=\");\n\n_c2 = SingleDisplay;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SingleDisplay\");","map":{"version":3,"names":["useState","useEffect","axios","CountriesDisplay","App","getNotes","setNotes","getAllNotes","setAllNotes","getFilter","setFilter","getCountriesDisplay","setCountriesDisplay","handleOnInputChange","event","target","value","notesToShow","filter","countryObject","compareTo","toLowerCase","name","common","startsWith","get","then","response","data","length","SingleDisplay","props","getFlagURL","flags","png","getFlagDisplay","setFlagDisplay","console","log","concat","flag","capital"],"sources":["/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CountriesDisplay from './components/CountriesDisplay.js';\n\nfunction App() {\n\n  // Gets all notes that currently satisfy the filter conditions.\n  const [getNotes, setNotes] = useState([])\n  // Gets all notes available from the API\n  const [getAllNotes, setAllNotes] = useState([])\n  // Gets and sets the filter.\n  const [getFilter, setFilter] = useState('')\n  // Decides what to desplay.\n  const [getCountriesDisplay, setCountriesDisplay] = useState('');\n\n\n  // changes filter based on input change\n  const handleOnInputChange = (event) => {\n    setFilter(event.target.value);\n  }\n\n\n  // Triggers a useEffect in case the filter is changed, and reformulates the output to show.\n  useEffect(() => {\n    if (getFilter === '') { setNotes(getAllNotes); return; }\n    const notesToShow = getAllNotes.filter((countryObject) => {\n      const compareTo = getFilter.toLowerCase();\n      return (countryObject.name.common.toLowerCase().startsWith(compareTo));\n    })\n    setNotes(notesToShow);\n  }, [getFilter])\n\n  // Grabs the note data from the API at the start of the App.\n  useEffect(() => {\n    axios.get(`https://restcountries.com/v3.1/all`).then(\n      (response) => {\n        setAllNotes(response.data);\n        setNotes(getAllNotes);\n        setFilter('')\n      }\n    );\n  }, []);\n\n\n  useEffect(() => {\n    if (getNotes.length === 1) {\n      setCountriesDisplay(<SingleDisplay countryObject={getNotes[0]} />)\n    }\n    else {\n      setCountriesDisplay(\n        <ul>\n          <CountriesDisplay countries={getNotes} />\n        </ul>\n      );\n    }\n  }, [getNotes])\n\n\n  return (\n    <>\n      <>\n        <h1>Country Information App</h1>\n      </>\n      <>\n        <h3>Find your favorite country here!</h3>\n        <>\n          <input onChange={handleOnInputChange}></input>\n        </>\n        {getCountriesDisplay}\n      </>\n    </>\n  )\n}\n\nconst SingleDisplay = (props) => {\n  const countryObject = props.countryObject;\n  const [getFlagURL] = useState(countryObject.flags.png)\n  const [getFlagDisplay, setFlagDisplay] = useState(<span>No image found!</span>)\n  console.log('render')\n\n  useEffect(() => {\n    setFlagDisplay(<img src={getFlagURL} />)\n  }, [getFlagURL])\n\n  return (\n    <>\n      <>\n        <>\n          <h1>The current country is {countryObject.name.common.concat(' ' + countryObject.flag)}</h1>\n        </>\n        <>\n          {getFlagDisplay}\n        </>\n        <>\n          <h2>Additional information</h2>\n        </>\n        <span>The capital of {countryObject.name.common.concat()} is {countryObject.capital[0]}</span>\n      </>\n      <>\n        <>\n          <h2>Languages:</h2>\n          <p>chuck</p>\n        </>\n      </>\n    </>\n\n  );\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}