{"ast":null,"code":"var _jsxFileName = \"/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/components/WeatherDisplay.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WeatherDisplay = props => {\n  _s();\n\n  const [getCoordinates, setCoordinates] = useState(props.coordinates);\n  const [getWeatherData, setWeatherData] = useState('');\n  const [getImage, setImage] = useState( /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No matching image found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 41\n  }, this)); // OpenWeather API KEY\n  // IMPORTANT! DO NOT OVERWRITE! Set as env variable instead!\n  // In bash: REACT_APP_API_KEY=\"VALUEHERE\" && NPM START\n\n  const APIKey = process.env.REACT_APP_API_KEY;\n  console.log(`got a key with ${APIKey}`);\n  useEffect(() => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${getCoordinates[0]}&lon=${getCoordinates[0]}&appid=${APIKey}`).then(response => {\n      setWeatherData(response.data); // console.log(`checkign url at ${getWeatherData.weather[0].icon}`)\n      // const iconURL = getWeatherData.weather[0].icon\n      // setImage(<img src={`https://openweathermap.org/img/wn/${iconURL}@2x.png`} />)\n    }).catch(() => {\n      console.log('api request failed');\n    });\n  }, [getCoordinates]);\n  useEffect(() => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${getCoordinates[0]}&lon=${getCoordinates[0]}&appid=${APIKey}`).then(response => {\n      setWeatherData(response.data);\n      console.log(`to me the url is ${getWeatherData.weather[0].icon}`);\n      const iconURL = getWeatherData.weather[0].icon;\n      setImage( /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://openweathermap.org/img/wn/${iconURL}@2x.png`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }, this));\n    });\n  }, []);\n\n  const kevinToCelcius = kelvins => {\n    return (kelvins - 273.5).toFixed(2);\n  };\n\n  useEffect(() => {\n    setCoordinates(props.coordinates);\n  }, [props]); // <p>The current temperature is {kevinToCelcius(getWeatherData.main.temp)}°</p>\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"The latitude is \", getCoordinates[0], \" and the longitude is \", getCoordinates[1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: getImage\n    }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"It's looking like a \", getWeatherData.weather[0].description, \" type of weather today.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n\n_s(WeatherDisplay, \"cHuQfRYGjOWzkd/pmNfzFHNHbGY=\");\n\n_c = WeatherDisplay;\nexport default WeatherDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"names":["useState","useEffect","axios","WeatherDisplay","props","getCoordinates","setCoordinates","coordinates","getWeatherData","setWeatherData","getImage","setImage","APIKey","process","env","REACT_APP_API_KEY","console","log","get","then","response","data","catch","weather","icon","iconURL","kevinToCelcius","kelvins","toFixed","description"],"sources":["/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/components/WeatherDisplay.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst WeatherDisplay = (props) => {\n  const [getCoordinates, setCoordinates] = useState(props.coordinates);\n  const [getWeatherData, setWeatherData] = useState('');\n  const [getImage, setImage] = useState(<p>No matching image found</p>);\n\n  // OpenWeather API KEY\n  // IMPORTANT! DO NOT OVERWRITE! Set as env variable instead!\n  // In bash: REACT_APP_API_KEY=\"VALUEHERE\" && NPM START\n  const APIKey = process.env.REACT_APP_API_KEY;\n  console.log(`got a key with ${APIKey}`);\n\n\n  useEffect(() => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${getCoordinates[0]}&lon=${getCoordinates[0]}&appid=${APIKey}`).then(response => {\n      setWeatherData(response.data);\n      // console.log(`checkign url at ${getWeatherData.weather[0].icon}`)\n      // const iconURL = getWeatherData.weather[0].icon\n      // setImage(<img src={`https://openweathermap.org/img/wn/${iconURL}@2x.png`} />)\n\n    }).catch(() => { console.log('api request failed') }\n    )\n  }, [getCoordinates])\n\n\n  useEffect(() => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${getCoordinates[0]}&lon=${getCoordinates[0]}&appid=${APIKey}`).then((response) => {\n      setWeatherData(response.data);\n      console.log(`to me the url is ${getWeatherData.weather[0].icon}`)\n      const iconURL = getWeatherData.weather[0].icon\n      setImage(<img src={`https://openweathermap.org/img/wn/${iconURL}@2x.png`} />)\n    })\n  }, [])\n\n  const kevinToCelcius = (kelvins) => {\n    return (kelvins - 273.5).toFixed(2);\n  }\n\n  useEffect(() => {\n    setCoordinates(props.coordinates)\n\n  }, [props])\n\n  // <p>The current temperature is {kevinToCelcius(getWeatherData.main.temp)}°</p>\n  return (\n    <>\n      <>\n        <h4>The latitude is {getCoordinates[0]} and the longitude is {getCoordinates[1]}</h4>\n      </>\n      <>\n      </>\n      <>\n        {getImage}\n      </>\n      <>\n        <p>It's looking like a {getWeatherData.weather[0].description} type of weather today.</p>\n      </>\n    </>\n  );\n};\n\nexport default WeatherDisplay;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;EAAA;;EAChC,MAAM,CAACC,cAAD,EAAiBC,cAAjB,IAAmCN,QAAQ,CAACI,KAAK,CAACG,WAAP,CAAjD;EACA,MAAM,CAACC,cAAD,EAAiBC,cAAjB,IAAmCT,QAAQ,CAAC,EAAD,CAAjD;EACA,MAAM,CAACU,QAAD,EAAWC,QAAX,IAAuBX,QAAQ,eAAC;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAD,CAArC,CAHgC,CAKhC;EACA;EACA;;EACA,MAAMY,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA3B;EACAC,OAAO,CAACC,GAAR,CAAa,kBAAiBL,MAAO,EAArC;EAGAX,SAAS,CAAC,MAAM;IACdC,KAAK,CAACgB,GAAN,CAAW,uDAAsDb,cAAc,CAAC,CAAD,CAAI,QAAOA,cAAc,CAAC,CAAD,CAAI,UAASO,MAAO,EAA5H,EAA+HO,IAA/H,CAAoIC,QAAQ,IAAI;MAC9IX,cAAc,CAACW,QAAQ,CAACC,IAAV,CAAd,CAD8I,CAE9I;MACA;MACA;IAED,CAND,EAMGC,KANH,CAMS,MAAM;MAAEN,OAAO,CAACC,GAAR,CAAY,oBAAZ;IAAmC,CANpD;EAQD,CATQ,EASN,CAACZ,cAAD,CATM,CAAT;EAYAJ,SAAS,CAAC,MAAM;IACdC,KAAK,CAACgB,GAAN,CAAW,uDAAsDb,cAAc,CAAC,CAAD,CAAI,QAAOA,cAAc,CAAC,CAAD,CAAI,UAASO,MAAO,EAA5H,EAA+HO,IAA/H,CAAqIC,QAAD,IAAc;MAChJX,cAAc,CAACW,QAAQ,CAACC,IAAV,CAAd;MACAL,OAAO,CAACC,GAAR,CAAa,oBAAmBT,cAAc,CAACe,OAAf,CAAuB,CAAvB,EAA0BC,IAAK,EAA/D;MACA,MAAMC,OAAO,GAAGjB,cAAc,CAACe,OAAf,CAAuB,CAAvB,EAA0BC,IAA1C;MACAb,QAAQ,eAAC;QAAK,GAAG,EAAG,qCAAoCc,OAAQ;MAAvD;QAAA;QAAA;QAAA;MAAA,QAAD,CAAR;IACD,CALD;EAMD,CAPQ,EAON,EAPM,CAAT;;EASA,MAAMC,cAAc,GAAIC,OAAD,IAAa;IAClC,OAAO,CAACA,OAAO,GAAG,KAAX,EAAkBC,OAAlB,CAA0B,CAA1B,CAAP;EACD,CAFD;;EAIA3B,SAAS,CAAC,MAAM;IACdK,cAAc,CAACF,KAAK,CAACG,WAAP,CAAd;EAED,CAHQ,EAGN,CAACH,KAAD,CAHM,CAAT,CArCgC,CA0ChC;;EACA,oBACE;IAAA,wBACE;MAAA,uBACE;QAAA,+BAAqBC,cAAc,CAAC,CAAD,CAAnC,4BAA8DA,cAAc,CAAC,CAAD,CAA5E;MAAA;QAAA;QAAA;QAAA;MAAA;IADF,iBADF,eAIE,qCAJF,eAME;MAAA,UACGK;IADH,iBANF,eASE;MAAA,uBACE;QAAA,mCAAwBF,cAAc,CAACe,OAAf,CAAuB,CAAvB,EAA0BM,WAAlD;MAAA;QAAA;QAAA;QAAA;MAAA;IADF,iBATF;EAAA,gBADF;AAeD,CA1DD;;GAAM1B,c;;KAAAA,c;AA4DN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}