[{"/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/index.js":"1","/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/App.js":"2","/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/components/CountriesDisplay.js":"3","/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/components/SingleDisplay.js":"4","/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/components/WeatherDisplay.js":"5"},{"size":233,"mtime":1661618525673,"results":"6","hashOfConfig":"7"},{"size":1798,"mtime":1661701952771,"results":"8","hashOfConfig":"7"},{"size":1335,"mtime":1661703013782,"results":"9","hashOfConfig":"7"},{"size":2010,"mtime":1661805217883,"results":"10","hashOfConfig":"7"},{"size":1979,"mtime":1661805216303,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1myrf0a",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"15"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/index.js",[],[],[],"/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/App.js",["29","30"],[],"import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CountriesDisplay from './components/CountriesDisplay.js';\n\nfunction App() {\n\n  // Gets all notes that currently satisfy the filter conditions.\n  const [getNotes, setNotes] = useState([])\n  // Gets all notes available from the API\n  const [getAllNotes, setAllNotes] = useState([])\n  // Gets and sets the filter.\n  const [getFilter, setFilter] = useState('')\n  // Decides what to desplay.\n  const [getCountriesDisplay, setCountriesDisplay] = useState('');\n\n\n  // changes filter based on input change\n  const handleOnInputChange = (event) => {\n    setFilter(event.target.value);\n  }\n\n\n  // Triggers a useEffect in case the filter is changed, and reformulates the output to show.\n  useEffect(() => {\n    if (getFilter === '') { setNotes(getAllNotes); return; }\n    const notesToShow = getAllNotes.filter((countryObject) => {\n      const compareTo = getFilter.toLowerCase();\n      return (countryObject.name.common.toLowerCase().startsWith(compareTo));\n    })\n    setNotes(notesToShow);\n  }, [getFilter])\n\n  // Grabs the note data from the API at the start of the App.\n  useEffect(() => {\n    axios.get(`https://restcountries.com/v3.1/all`).then(\n      (response) => {\n        setAllNotes(response.data);\n        setNotes(getAllNotes);\n        setFilter('')\n      }\n    );\n  }, []);\n\n\n  useEffect(() => {\n    setCountriesDisplay(\n      <ul>\n        <CountriesDisplay countries={getNotes} />\n      </ul>\n    );\n  }, [getNotes])\n\n\n  return (\n    <>\n      <>\n        <h1>Country Information App</h1>\n      </>\n      <>\n        <h3>Find your favorite country here!</h3>\n        <>\n          <input onChange={handleOnInputChange}></input>\n        </>\n        {getCountriesDisplay}\n      </>\n    </>\n  )\n}\n\n\n\n\nexport default App;\n","/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/components/CountriesDisplay.js",[],[],"/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/components/SingleDisplay.js",["31","32"],[],"/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/countries/src/components/WeatherDisplay.js",["33","34"],[],{"ruleId":"35","severity":1,"message":"36","line":31,"column":6,"nodeType":"37","endLine":31,"endColumn":17,"suggestions":"38"},{"ruleId":"35","severity":1,"message":"36","line":42,"column":6,"nodeType":"37","endLine":42,"endColumn":8,"suggestions":"39"},{"ruleId":"40","severity":1,"message":"41","line":8,"column":39,"nodeType":"42","endLine":8,"endColumn":76},{"ruleId":"40","severity":1,"message":"41","line":25,"column":13,"nodeType":"42","endLine":25,"endColumn":50},{"ruleId":"35","severity":1,"message":"43","line":21,"column":6,"nodeType":"37","endLine":21,"endColumn":22,"suggestions":"44"},{"ruleId":"40","severity":1,"message":"41","line":33,"column":16,"nodeType":"42","endLine":33,"endColumn":83},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllNotes'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNotes' needs the current value of 'getAllNotes'.","ArrayExpression",["45"],["46"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getApiKey'. Either include it or remove the dependency array.",["47"],{"desc":"48","fix":"49"},{"desc":"50","fix":"51"},{"desc":"52","fix":"53"},"Update the dependencies array to be: [getAllNotes, getFilter]",{"range":"54","text":"55"},"Update the dependencies array to be: [getAllNotes]",{"range":"56","text":"57"},"Update the dependencies array to be: [getApiKey, getCoordinates]",{"range":"58","text":"59"},[1066,1077],"[getAllNotes, getFilter]",[1352,1354],"[getAllNotes]",[933,949],"[getApiKey, getCoordinates]"]