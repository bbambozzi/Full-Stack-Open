{"ast":null,"code":"var _jsxFileName = \"/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/note_taking_app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport noteService from './services/notes.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nlet App = () => {\n  _s();\n\n  let [getAllNotes, setAllNotes] = useState([]);\n  let [getNewNote, setNewNote] = useState('');\n  let [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setAllNotes(initialNotes);\n    });\n  }, []);\n  const notesToShow = showAll ? getAllNotes : getAllNotes.filter(note => note.important);\n\n  let handleNewNoteChange = event => {\n    let newNote = event.target.value;\n    setNewNote(newNote);\n  };\n\n  const toggleImportance = id => {\n    const oldNote = getAllNotes.find(note => note.id === id);\n    const newNote = { ...oldNote,\n      important: !oldNote.important\n    };\n    noteService.update(newNote).then(() => {\n      noteService.getAll().then(allNotesResponse => {\n        setAllNotes(allNotesResponse);\n      }).catch(() => {\n        window.alert('This note has been deleted already.');\n        setAllNotes(getAllNotes.filter(note => note.id != id));\n      });\n    });\n  };\n\n  let handleSaveNewNote = event => {\n    event.preventDefault();\n    let userInput = getNewNote;\n    let newNoteObject = {\n      content: userInput,\n      important: Math.random() > 0.5,\n      date: new Date()\n    };\n    noteService.create(newNoteObject).then(() => {\n      noteService.getAll().then(allNotesResponse => {\n        setAllNotes(allNotesResponse);\n      });\n    });\n    setNewNote('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Note-Taking App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Note, {\n            note: note,\n            toggle: () => {\n              toggleImportance(note.id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 56\n          }, this)\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowAll(!showAll),\n          children: showAll ? 'Important' : 'Everything'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add a new Note!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSaveNewNote,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleNewNoteChange,\n          value: getNewNote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(App, \"lNSIw+teQs7PnvQ/BymQvLuPCgw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Note","noteService","App","getAllNotes","setAllNotes","getNewNote","setNewNote","showAll","setShowAll","getAll","then","initialNotes","notesToShow","filter","note","important","handleNewNoteChange","event","newNote","target","value","toggleImportance","id","oldNote","find","update","allNotesResponse","catch","window","alert","handleSaveNewNote","preventDefault","userInput","newNoteObject","content","Math","random","date","Date","create","map"],"sources":["/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/note_taking_app/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes.js'\n\nlet App = () => {\n\n\n\n  let [getAllNotes, setAllNotes] = useState([]);\n  let [getNewNote, setNewNote] = useState('');\n  let [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then((initialNotes) => {\n        setAllNotes(initialNotes)\n      });\n  }, [])\n\n\n  const notesToShow = showAll ? getAllNotes : getAllNotes.filter(note => (note.important));\n\n\n  let handleNewNoteChange = (event) => {\n    let newNote = event.target.value;\n    setNewNote(newNote);\n  }\n\n\n  const toggleImportance = (id) => {\n    const oldNote = getAllNotes.find((note) => note.id === id)\n    const newNote = { ...oldNote, important: !oldNote.important };\n\n    noteService.update(newNote).then(() => {\n      noteService.getAll().then((allNotesResponse) => {\n        setAllNotes(allNotesResponse)\n      }).catch(() => {\n        window.alert('This note has been deleted already.')\n        setAllNotes(getAllNotes.filter(note => note.id != id))\n      })\n    })\n  }\n\n  let handleSaveNewNote = (event) => {\n    event.preventDefault();\n    let userInput = getNewNote\n    let newNoteObject = {\n      content: userInput,\n      important: Math.random() > 0.5,\n      date: new Date(),\n    };\n    noteService.create(newNoteObject).then(() => {\n      noteService.getAll().then((allNotesResponse) => {\n        setAllNotes(allNotesResponse)\n      })\n    })\n    setNewNote('')\n  }\n\n  return (\n    <>\n      <>\n        <h1>Note-Taking App</h1>\n        <ul>\n          {notesToShow.map((note) => <li key={note.id}><Note note={note} toggle={() => { toggleImportance(note.id) }} /></li>)}\n        </ul>\n        <>\n          <button onClick={() => setShowAll(!showAll)}>\n            {showAll ? 'Important' : 'Everything'}\n          </button>\n        </>\n      </>\n      <>\n        <h2>Add a new Note!</h2>\n        <form onSubmit={handleSaveNewNote}>\n          <input onChange={handleNewNoteChange} value={getNewNote} />\n          <button type=\"submit\">Save!</button>\n        </form>\n      </>\n    </>\n  )\n}\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;;;AAEA,IAAIC,GAAG,GAAG,MAAM;EAAA;;EAId,IAAI,CAACC,WAAD,EAAcC,WAAd,IAA6BN,QAAQ,CAAC,EAAD,CAAzC;EACA,IAAI,CAACO,UAAD,EAAaC,UAAb,IAA2BR,QAAQ,CAAC,EAAD,CAAvC;EACA,IAAI,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAApC;EAEAC,SAAS,CAAC,MAAM;IACdE,WAAW,CACRQ,MADH,GAEGC,IAFH,CAESC,YAAD,IAAkB;MACtBP,WAAW,CAACO,YAAD,CAAX;IACD,CAJH;EAKD,CANQ,EAMN,EANM,CAAT;EASA,MAAMC,WAAW,GAAGL,OAAO,GAAGJ,WAAH,GAAiBA,WAAW,CAACU,MAAZ,CAAmBC,IAAI,IAAKA,IAAI,CAACC,SAAjC,CAA5C;;EAGA,IAAIC,mBAAmB,GAAIC,KAAD,IAAW;IACnC,IAAIC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA3B;IACAd,UAAU,CAACY,OAAD,CAAV;EACD,CAHD;;EAMA,MAAMG,gBAAgB,GAAIC,EAAD,IAAQ;IAC/B,MAAMC,OAAO,GAAGpB,WAAW,CAACqB,IAAZ,CAAkBV,IAAD,IAAUA,IAAI,CAACQ,EAAL,KAAYA,EAAvC,CAAhB;IACA,MAAMJ,OAAO,GAAG,EAAE,GAAGK,OAAL;MAAcR,SAAS,EAAE,CAACQ,OAAO,CAACR;IAAlC,CAAhB;IAEAd,WAAW,CAACwB,MAAZ,CAAmBP,OAAnB,EAA4BR,IAA5B,CAAiC,MAAM;MACrCT,WAAW,CAACQ,MAAZ,GAAqBC,IAArB,CAA2BgB,gBAAD,IAAsB;QAC9CtB,WAAW,CAACsB,gBAAD,CAAX;MACD,CAFD,EAEGC,KAFH,CAES,MAAM;QACbC,MAAM,CAACC,KAAP,CAAa,qCAAb;QACAzB,WAAW,CAACD,WAAW,CAACU,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACQ,EAAL,IAAWA,EAAtC,CAAD,CAAX;MACD,CALD;IAMD,CAPD;EAQD,CAZD;;EAcA,IAAIQ,iBAAiB,GAAIb,KAAD,IAAW;IACjCA,KAAK,CAACc,cAAN;IACA,IAAIC,SAAS,GAAG3B,UAAhB;IACA,IAAI4B,aAAa,GAAG;MAClBC,OAAO,EAAEF,SADS;MAElBjB,SAAS,EAAEoB,IAAI,CAACC,MAAL,KAAgB,GAFT;MAGlBC,IAAI,EAAE,IAAIC,IAAJ;IAHY,CAApB;IAKArC,WAAW,CAACsC,MAAZ,CAAmBN,aAAnB,EAAkCvB,IAAlC,CAAuC,MAAM;MAC3CT,WAAW,CAACQ,MAAZ,GAAqBC,IAArB,CAA2BgB,gBAAD,IAAsB;QAC9CtB,WAAW,CAACsB,gBAAD,CAAX;MACD,CAFD;IAGD,CAJD;IAKApB,UAAU,CAAC,EAAD,CAAV;EACD,CAdD;;EAgBA,oBACE;IAAA,wBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UACGM,WAAW,CAAC4B,GAAZ,CAAiB1B,IAAD,iBAAU;UAAA,uBAAkB,QAAC,IAAD;YAAM,IAAI,EAAEA,IAAZ;YAAkB,MAAM,EAAE,MAAM;cAAEO,gBAAgB,CAACP,IAAI,CAACQ,EAAN,CAAhB;YAA2B;UAA7D;YAAA;YAAA;YAAA;UAAA;QAAlB,GAASR,IAAI,CAACQ,EAAd;UAAA;UAAA;UAAA;QAAA,QAA1B;MADH;QAAA;QAAA;QAAA;MAAA,QAFF,eAKE;QAAA,uBACE;UAAQ,OAAO,EAAE,MAAMd,UAAU,CAAC,CAACD,OAAF,CAAjC;UAAA,UACGA,OAAO,GAAG,WAAH,GAAiB;QAD3B;UAAA;UAAA;UAAA;QAAA;MADF,iBALF;IAAA,gBADF,eAYE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAM,QAAQ,EAAEuB,iBAAhB;QAAA,wBACE;UAAO,QAAQ,EAAEd,mBAAjB;UAAsC,KAAK,EAAEX;QAA7C;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA,gBAZF;EAAA,gBADF;AAsBD,CA9ED;;GAAIH,G;;KAAAA,G;AA+EJ,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}