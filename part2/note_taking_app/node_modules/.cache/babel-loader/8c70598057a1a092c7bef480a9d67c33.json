{"ast":null,"code":"var _jsxFileName = \"/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/part0/part2-notes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Note from './components/Note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nlet App = props => {\n  _s();\n\n  let notes = props.notes;\n  let [getAllNotes, setAllNotes] = useState(notes);\n  console.log(getAllNotes);\n  let [getNewNote, setNewNote] = useState('');\n\n  let handleNewNoteChange = event => {\n    let newNote = event.target.value;\n    setNewNote(newNote);\n  };\n\n  let handleSaveNewNote = event => {\n    event.preventDefault();\n    let userInput = event.target.value;\n    let newNoteObject = {\n      id: getAllNotes.length + 1,\n      content: userInput,\n      important: Math.random > 0.49,\n      date: new Date()\n    };\n    setAllNotes(getAllNotes.concat(newNoteObject));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Note-Taking App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: getAllNotes.map(note => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Note, {\n              content: note.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 38\n            }, this)\n          }, note.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add a new Note!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSaveNewNote,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleNewNoteChange,\n          value: getNewNote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(App, \"1eeCr8khpKUfdxh04Swr9XdF1sk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Note","App","props","notes","getAllNotes","setAllNotes","console","log","getNewNote","setNewNote","handleNewNoteChange","event","newNote","target","value","handleSaveNewNote","preventDefault","userInput","newNoteObject","id","length","content","important","Math","random","date","Date","concat","map","note"],"sources":["/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/part0/part2-notes/src/App.js"],"sourcesContent":["import { useState } from 'react'\nimport Note from './components/Note'\n\nlet App = (props) => {\n  let notes = props.notes;\n  let [getAllNotes, setAllNotes] = useState(notes);\n  console.log(getAllNotes)\n  let [getNewNote, setNewNote] = useState('');\n  let handleNewNoteChange = (event) => {\n    let newNote = event.target.value;\n    setNewNote(newNote);\n\n  }\n  let handleSaveNewNote = (event) => {\n    event.preventDefault();\n    let userInput = event.target.value;\n    let newNoteObject = {\n      id: getAllNotes.length + 1,\n      content: userInput,\n      important: Math.random > 0.49,\n      date: new Date(),\n    };\n    setAllNotes(getAllNotes.concat(newNoteObject));\n  }\n\n\n\n  return (\n    <>\n      <>\n        <h1>Note-Taking App</h1>\n        <ul>\n          {getAllNotes.map((note) => {\n            return <li key={note.id}><Note content={note.content} /></li>\n          })}\n        </ul>\n      </>\n      <>\n        <h2>Add a new Note!</h2>\n        <form onSubmit={handleSaveNewNote}>\n          <input onChange={handleNewNoteChange} value={getNewNote} />\n          <button type='submit'>Save!</button>\n        </form>\n      </>\n    </>\n  )\n}\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;;AAEA,IAAIC,GAAG,GAAIC,KAAD,IAAW;EAAA;;EACnB,IAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;EACA,IAAI,CAACC,WAAD,EAAcC,WAAd,IAA6BN,QAAQ,CAACI,KAAD,CAAzC;EACAG,OAAO,CAACC,GAAR,CAAYH,WAAZ;EACA,IAAI,CAACI,UAAD,EAAaC,UAAb,IAA2BV,QAAQ,CAAC,EAAD,CAAvC;;EACA,IAAIW,mBAAmB,GAAIC,KAAD,IAAW;IACnC,IAAIC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA3B;IACAL,UAAU,CAACG,OAAD,CAAV;EAED,CAJD;;EAKA,IAAIG,iBAAiB,GAAIJ,KAAD,IAAW;IACjCA,KAAK,CAACK,cAAN;IACA,IAAIC,SAAS,GAAGN,KAAK,CAACE,MAAN,CAAaC,KAA7B;IACA,IAAII,aAAa,GAAG;MAClBC,EAAE,EAAEf,WAAW,CAACgB,MAAZ,GAAqB,CADP;MAElBC,OAAO,EAAEJ,SAFS;MAGlBK,SAAS,EAAEC,IAAI,CAACC,MAAL,GAAc,IAHP;MAIlBC,IAAI,EAAE,IAAIC,IAAJ;IAJY,CAApB;IAMArB,WAAW,CAACD,WAAW,CAACuB,MAAZ,CAAmBT,aAAnB,CAAD,CAAX;EACD,CAVD;;EAcA,oBACE;IAAA,wBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UACGd,WAAW,CAACwB,GAAZ,CAAiBC,IAAD,IAAU;UACzB,oBAAO;YAAA,uBAAkB,QAAC,IAAD;cAAM,OAAO,EAAEA,IAAI,CAACR;YAApB;cAAA;cAAA;cAAA;YAAA;UAAlB,GAASQ,IAAI,CAACV,EAAd;YAAA;YAAA;YAAA;UAAA,QAAP;QACD,CAFA;MADH;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA,gBADF,eASE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAM,QAAQ,EAAEJ,iBAAhB;QAAA,wBACE;UAAO,QAAQ,EAAEL,mBAAjB;UAAsC,KAAK,EAAEF;QAA7C;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA,gBATF;EAAA,gBADF;AAmBD,CA3CD;;GAAIP,G;;KAAAA,G;AA4CJ,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}