{"ast":null,"code":"var _jsxFileName = \"/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/part0/part2-notes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Note from './components/Note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = _ref => {\n  _s();\n\n  let {\n    notes\n  } = _ref;\n  let [getNotes, setNotes] = useState(notes);\n  let [getNewNote, setNewNote] = useState('');\n  console.log(getNotes);\n\n  let handleNewNote = event => {\n    event.preventDefault();\n    let newNoteObject = {\n      id: getNotes.length + 1,\n      content: getNewNote,\n      important: Math.random() > 0.49\n    };\n    setNotes(getNotes.concat(newNoteObject));\n    setNewNote('');\n  };\n\n  let handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Note-taking application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), getNotes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Note, {\n          content: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 49\n        }, this)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 31\n      }, this))]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleNewNote,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleNoteChange,\n          value: getNewNote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n  /*\n  -- notes (display them with useState)\n  -- form with a button to the right\n      -- handlechange on the form so it can be written.\n      -- onclick to be something that's stored into a useState variable.\n  */\n};\n\n_s(App, \"B1NsglT7F5M4HHe4u5gQjx2/lg8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Note","App","notes","getNotes","setNotes","getNewNote","setNewNote","console","log","handleNewNote","event","preventDefault","newNoteObject","id","length","content","important","Math","random","concat","handleNoteChange","target","value","map","note"],"sources":["/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/part0/part2-notes/src/App.js"],"sourcesContent":["import { useState } from 'react'\nimport Note from './components/Note'\n\nconst App = ({ notes }) => {\n  let [getNotes, setNotes] = useState(notes);\n  let [getNewNote, setNewNote] = useState('')\n  console.log(getNotes);\n\n  let handleNewNote = (event) => {\n    event.preventDefault();\n    let newNoteObject = {\n      id: getNotes.length + 1,\n      content: getNewNote,\n      important: Math.random() > 0.49,\n\n    }\n    setNotes(getNotes.concat(newNoteObject));\n    setNewNote('')\n  }\n  let handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  }\n\n\n\n\n  return (\n    <>\n      <>\n        <h1>Note-taking application</h1>\n        {getNotes.map(note => <li key={note.id}><Note content={note.content} /></li>)}\n      </>\n      <>\n        <form onSubmit={handleNewNote}>\n          <input onChange={handleNoteChange} value={getNewNote}/>\n          <button type=\"submit\">Save!</button>\n        </form>\n      </>\n    </>\n\n  );\n  /*\n  -- notes (display them with useState)\n  -- form with a button to the right\n      -- handlechange on the form so it can be written.\n      -- onclick to be something that's stored into a useState variable.\n  */\n\n\n};\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;;AAEA,MAAMC,GAAG,GAAG,QAAe;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EACzB,IAAI,CAACC,QAAD,EAAWC,QAAX,IAAuBL,QAAQ,CAACG,KAAD,CAAnC;EACA,IAAI,CAACG,UAAD,EAAaC,UAAb,IAA2BP,QAAQ,CAAC,EAAD,CAAvC;EACAQ,OAAO,CAACC,GAAR,CAAYL,QAAZ;;EAEA,IAAIM,aAAa,GAAIC,KAAD,IAAW;IAC7BA,KAAK,CAACC,cAAN;IACA,IAAIC,aAAa,GAAG;MAClBC,EAAE,EAAEV,QAAQ,CAACW,MAAT,GAAkB,CADJ;MAElBC,OAAO,EAAEV,UAFS;MAGlBW,SAAS,EAAEC,IAAI,CAACC,MAAL,KAAgB;IAHT,CAApB;IAMAd,QAAQ,CAACD,QAAQ,CAACgB,MAAT,CAAgBP,aAAhB,CAAD,CAAR;IACAN,UAAU,CAAC,EAAD,CAAV;EACD,CAVD;;EAWA,IAAIc,gBAAgB,GAAIV,KAAD,IAAW;IAChCJ,UAAU,CAACI,KAAK,CAACW,MAAN,CAAaC,KAAd,CAAV;EACD,CAFD;;EAOA,oBACE;IAAA,wBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAEGnB,QAAQ,CAACoB,GAAT,CAAaC,IAAI,iBAAI;QAAA,uBAAkB,QAAC,IAAD;UAAM,OAAO,EAAEA,IAAI,CAACT;QAApB;UAAA;UAAA;UAAA;QAAA;MAAlB,GAASS,IAAI,CAACX,EAAd;QAAA;QAAA;QAAA;MAAA,QAArB,CAFH;IAAA,gBADF,eAKE;MAAA,uBACE;QAAM,QAAQ,EAAEJ,aAAhB;QAAA,wBACE;UAAO,QAAQ,EAAEW,gBAAjB;UAAmC,KAAK,EAAEf;QAA1C;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF,iBALF;EAAA,gBADF;EAeA;AACF;AACA;AACA;AACA;AACA;AAGC,CA9CD;;GAAMJ,G;;KAAAA,G;AA+CN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}