{"ast":null,"code":"// Make an axios-type note services which handles URL requests and avoids bloat on main App.\nimport axios from 'axios';\nconst baseURL = `http://localhost:3001/notes`;\n\nconst getAll = () => {\n  return axios.get(baseURL);\n};\n\nconst create = newObject => {\n  axios.post(baseURL, newObject);\n};\n\nconst update = newObject => {\n  axios.post(`${baseURL}/${newObject.id}`, newObject);\n};\n\nexport default {\n  getAll: getAll,\n  create: create,\n  update: update\n};","map":{"version":3,"names":["axios","baseURL","getAll","get","create","newObject","post","update","id"],"sources":["/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/note_taking_app/src/services/notes.js"],"sourcesContent":["// Make an axios-type note services which handles URL requests and avoids bloat on main App.\nimport axios from 'axios';\n\n\nconst baseURL = `http://localhost:3001/notes`\n\n\nconst getAll = () => {\n  return axios.get(baseURL)\n\n}\n\nconst create = (newObject) => {\n  axios.post(baseURL, newObject)\n}\n\nconst update = (newObject) => {\n  axios.post(`${baseURL}/${newObject.id}`, newObject)\n}\n\n\nexport default {\n  getAll: getAll,\n  create: create,\n  update: update,\n}\n"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,OAAO,GAAI,6BAAjB;;AAGA,MAAMC,MAAM,GAAG,MAAM;EACnB,OAAOF,KAAK,CAACG,GAAN,CAAUF,OAAV,CAAP;AAED,CAHD;;AAKA,MAAMG,MAAM,GAAIC,SAAD,IAAe;EAC5BL,KAAK,CAACM,IAAN,CAAWL,OAAX,EAAoBI,SAApB;AACD,CAFD;;AAIA,MAAME,MAAM,GAAIF,SAAD,IAAe;EAC5BL,KAAK,CAACM,IAAN,CAAY,GAAEL,OAAQ,IAAGI,SAAS,CAACG,EAAG,EAAtC,EAAyCH,SAAzC;AACD,CAFD;;AAKA,eAAe;EACbH,MAAM,EAAEA,MADK;EAEbE,MAAM,EAAEA,MAFK;EAGbG,MAAM,EAAEA;AAHK,CAAf"},"metadata":{},"sourceType":"module"}