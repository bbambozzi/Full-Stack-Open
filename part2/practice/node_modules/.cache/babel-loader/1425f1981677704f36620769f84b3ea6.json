{"ast":null,"code":"var _jsxFileName = \"/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/part0/part2-notes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Note from './components/Note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = _ref => {\n  _s();\n\n  let {\n    notes\n  } = _ref;\n  let [getNotes, setNotes] = useState(notes);\n\n  let handleNoteChange = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Note-taking application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), getNotes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Note, {\n          content: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 49\n        }, this)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 31\n      }, this))]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Save!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n  /*\n  -- notes (display them with useState)\n  -- form with a button to the right\n      -- handlechange on the form so it can be written.\n      -- onclick to be something that's stored into a useState variable.\n  */\n};\n\n_s(App, \"rtYUh6Mt7hkCSOmME127qa9dvlo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Note","App","notes","getNotes","setNotes","handleNoteChange","event","preventDefault","map","note","content","id"],"sources":["/home/jbb/Documents/Web_Dev/Full-Stack-Open/part2/part0/part2-notes/src/App.js"],"sourcesContent":["import { useState } from 'react'\nimport Note from './components/Note'\n\nconst App = ({ notes }) => {\n  let [getNotes, setNotes] = useState(notes);\n\n  let handleNoteChange = (event) => {\n    event.preventDefault();\n  }\n\n\n\n\n  return (\n    <>\n      <>\n        <h1>Note-taking application</h1>\n        {getNotes.map(note => <li key={note.id}><Note content={note.content} /></li>)}\n      </>\n      <>\n        <form>\n          <input />\n          <button>Save!</button>\n        </form>\n      </>\n    </>\n\n  );\n  /*\n  -- notes (display them with useState)\n  -- form with a button to the right\n      -- handlechange on the form so it can be written.\n      -- onclick to be something that's stored into a useState variable.\n  */\n\n\n};\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;;AAEA,MAAMC,GAAG,GAAG,QAAe;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EACzB,IAAI,CAACC,QAAD,EAAWC,QAAX,IAAuBL,QAAQ,CAACG,KAAD,CAAnC;;EAEA,IAAIG,gBAAgB,GAAIC,KAAD,IAAW;IAChCA,KAAK,CAACC,cAAN;EACD,CAFD;;EAOA,oBACE;IAAA,wBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAEGJ,QAAQ,CAACK,GAAT,CAAaC,IAAI,iBAAI;QAAA,uBAAkB,QAAC,IAAD;UAAM,OAAO,EAAEA,IAAI,CAACC;QAApB;UAAA;UAAA;UAAA;QAAA;MAAlB,GAASD,IAAI,CAACE,EAAd;QAAA;QAAA;QAAA;MAAA,QAArB,CAFH;IAAA,gBADF,eAKE;MAAA,uBACE;QAAA,wBACE;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF,iBALF;EAAA,gBADF;EAeA;AACF;AACA;AACA;AACA;AACA;AAGC,CAjCD;;GAAMV,G;;KAAAA,G;AAkCN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}